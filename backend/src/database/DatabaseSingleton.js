import mongoose from 'mongoose';

/**
 * Clase que implementa el patr√≥n Singleton para la conexi√≥n a MongoDB.
 * Garantiza que solo exista una instancia de conexi√≥n Mongoose en toda la aplicaci√≥n.
 */
class DatabaseSingleton {
    
    // Almacena la √∫nica instancia de esta clase.
    static instance = null;
    
    // Almacena el objeto de conexi√≥n de Mongoose.
    connection = null;

    /**
     * El constructor es privado para forzar el uso de la instancia √∫nica.
     * Si ya existe una instancia, la retorna.
     */
    constructor() {
        if (DatabaseSingleton.instance) {
            return DatabaseSingleton.instance;
        }
        DatabaseSingleton.instance = this;
    }

    /**
     * Conecta a MongoDB o retorna la conexi√≥n existente.
     * Implementa el principio Fail-Fast.
     * @returns {Promise<mongoose.Connection>} El objeto de conexi√≥n.
     */
    async connect() {
        // 1. Reutilizar la conexi√≥n si ya est√° establecida
        if (this.connection && this.connection.readyState === 1) {
            console.log('üîå MongoDB ya est√° conectado. Reutilizando instancia.');
            return this.connection;
        }

        // 2. Obtener la URI
        const MONGO_URI = process.env.MONGO_URI;
        if (!MONGO_URI) {
            console.error('‚ùå Error: MONGO_URI no est√° definido en el entorno.');
            process.exit(1); // Fail-Fast
        }

        try {
            // 3. Establecer la nueva conexi√≥n
            const options = {};
            
            this.connection = await mongoose.connect(MONGO_URI, options);
            console.log('üîå Conectado a MongoDB satisfactoriamente.');
            
            // Manejo de eventos de conexi√≥n despu√©s del inicio
            this.connection.connection.on('error', (err) => {
                console.error('‚ùå Error de conexi√≥n post-inicializaci√≥n:', err);
            });

            return this.connection;

        } catch (error) {
            // 4. Manejo de errores 
            console.error('‚ùå Error fatal al conectar con MongoDB:', error.message);
            // Termina el proceso si no se puede conectar a la DB (ADR 007)
            process.exit(1); 
        }
    }
}

// Exportar la instancia √∫nica (Singleton) para ser usada en toda la aplicaci√≥n.
export default new DatabaseSingleton();